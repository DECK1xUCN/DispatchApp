generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "darwin", "darwin-arm64"]
  previewFeatures = ["jsonProtocol"] // performance upgrade since prisma 4.11
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Flight {
  id              Int           @id @default(autoincrement())
  flightNumber    String        @unique
  date            DateTime      @default(now())
  helicopterId    Int
  pilotId         Int
  hoistOperatorId Int
  siteId          Int
  fromId          Int
  toId            Int
  etd             DateTime      @default(now())
  rotorStart      DateTime      @default(now())
  ata             DateTime      @default(now())
  eta             DateTime      @default(now())
  rotorStop       DateTime      @default(now())
  atd             DateTime      @default(now())
  flightTime      Int?          @default(0)
  blockTime       Int?          @default(0)
  delay           Boolean?      @default(false)
  delayCode       String?       @default("N/A")
  delayTime       Int?          @default(0)
  delayNote       String?       @default("N/A")
  pax             Int?          @default(0)
  paxTax          Int?          @default(0)
  cargoPP         Int?          @default(0)
  hoistCycles     Int?          @default(0)
  note            String?       @default("N/A")
  editable        Boolean       @default(true)
  dailyReportId   Int?
  dailyUpdate     DailyUpdate?
  dailyReport     DailyReport?  @relation(fields: [dailyReportId], references: [id])
  from            Location      @relation("from", fields: [fromId], references: [id])
  helicopter      Helicopter    @relation(fields: [helicopterId], references: [id])
  hoistOperator   HoistOperator @relation(fields: [hoistOperatorId], references: [id])
  pilot           Pilot         @relation(fields: [pilotId], references: [id])
  site            Site          @relation(fields: [siteId], references: [id])
  to              Location      @relation("to", fields: [toId], references: [id])
  via             Location[]    @relation("FlightToLocation")
}

model Site {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  flights   Flight[]
  locations Location[]
}

model Location {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  lat    Float    @default(0)
  lng    Float    @default(0)
  type   String
  siteId Int
  from   Flight[] @relation("from")
  to     Flight[] @relation("to")
  site   Site     @relation(fields: [siteId], references: [id])
  via    Flight[] @relation("FlightToLocation")
}

model Helicopter {
  id           Int      @id @default(autoincrement())
  manufacturer String   @unique
  model        String
  reg          String   @unique
  flights      Flight[]
}

model Pilot {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  flights Flight[]
}

model HoistOperator {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  flights Flight[]
}

model DailyUpdate {
  id                   Int      @id @default(autoincrement())
  flightId             Int      @unique
  wasFlight            Boolean  @default(true)
  delay                Boolean  @default(false)
  delayCode            String?  @default("N/A")
  delayTime            Int?     @default(0)
  delayDesc            String?  @default("N/A")
  maintenance          Boolean  @default(false)
  plannedMaintenance   Boolean? @default(false)
  unplannedMaintenance Boolean? @default(false)
  otherMaintenance     Boolean? @default(false)
  maintenanceNote      String?  @default("N/A")
  baseAndEquipment     Boolean  @default(false)
  note                 String?  @default("N/A")
  flight               Flight   @relation(fields: [flightId], references: [id])
}

model DailyReport {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now())
  flights Flight[]
}
